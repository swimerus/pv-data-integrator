version: '3.4'

x-common:
  &common
  image: apache/airflow:2.3.0
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./airflow/files:/opt/airflow/files
    - ./db/postgres/dumps:/var/lib/postgresql/dumps/
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    db:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:

  selenium-firefox:
    image: selenium/standalone-firefox
    container_name: pv_selenium-firefox
    volumes:
      - ./airflow/files:/opt/airflow/files
    ports:
      - 4444:4444

  db:
    image: postgres:13
    container_name: pv_postgres
    ports:
      - 5432:5432
    volumes:
      - ./db/postgres/postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    env_file:
      - .env

  adminer:
    image: adminer
    container_name: pv_adminer
    ports:
      - 8081:8080

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: pv_airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: pv_airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:8080/health"
        ]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: pv_airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/airflow/logs /sources/airflow/dags /sources/airflow/plugins  
        chown -R "${AIRFLOW_UID}:0" /sources/{airflow/logs,airflow/dags,airflow/plugins}
        exec /entrypoint airflow version

  grafana:
    image: grafana/grafana:9.2.3
    container_name: pv_grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana-data:/var/lib/grafana
    depends_on:
      db:
        condition: service_healthy
